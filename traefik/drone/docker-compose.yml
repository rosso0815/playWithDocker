version: "3.7"

services:

  drone:
    image: drone/drone:1.9.0
    hostname: drone
    container_name: drone
    ports:
      - "4000:4000"
    networks:
      - master
        #    dns:
        #      - 192.168.0.110
    extra_hosts:
      - "gitea.somsi:192.168.0.110"
      - "drone.somsi:192.168.0.110"
    volumes:
      - ./drone:/data
      -  /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_GITEA_SERVER=http://gitea.somsi
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_GITEA_CLIENT_ID=f2667678-1a0c-4b3a-8ffc-eb6c0a3f1ff1
      - DRONE_GITEA_CLIENT_SECRET=FA_Vs2MGfvP8m1ldlZ2Hic4n04yLfeapg7mcIbI5RH4=
      - DRONE_GITEA_SKIP_VERIFY=true
      - DRONE_GITEA_DEBUG=true
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_SERVER_HOST=drone.somsi
      - DRONE_SERVER_PROTO=http
      - DRONE_SERVER_PORT=:4000
      - DRONE_TLS_AUTOCERT=false
      - DRONE_DEBUG=true
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_LOGS_TEXT=true
      - DRONE_DEBUG_PRETTY=true
      - DRONE_RUNNER_NETWORKS=
      - DRONE_SECRET=1234
      - DRONE_RPC_SECRET=secret
    labels:
      - "traefik.enable=true"
      - "traefik.port=4000"
      - "traefik.http.routers.drone.rule=Host(`drone.somsi`)"
      - "traefik.http.routers.drone.entrypoints=web"
      - "traefik.http.routers.drone.service=drone"
      - "traefik.http.services.drone.loadbalancer.server.port=4000"

  drone-runner-docker:
    image: drone/drone-runner-docker:1.4.0
    #    depends_on: 
    #  - drone
    networks:
      - master
    extra_hosts:
      - "gitea.somsi:192.168.0.110"
      - "drone.somsi:192.168.0.110"
    #dns:
    #- 192.168.0.110
    ports:
      - "3001:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone.somsi
      - DRONE_RPC_SECRET=secret
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=drone-runner-docker

  # drone-runner-exec:
  #   image: drone/drone-runner-exec:1.2
  #   depends_on: 
  #     - drone
  #   networks:
  #     - master
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - DRONE_RPC_PROTO=http
  #     - DRONE_RPC_HOST=drone.home
  #     - DRONE_RPC_SECRET=secret
  #     - DRONE_RUNNER_CAPACITY=2
  #     - DRONE_RUNNER_NAME=drone-runner-exec


networks:
  master:
    external: true
